- if @note_counts
  - note_count = @note_counts.fetch(commit.id, 0)
- else
  - notes = commit.notes
  - note_count = notes.user.count

- ci_commit = project.ci_commit(commit.sha)
- cache_key = [project.path_with_namespace, commit.id, note_count]
- cache_key.push(ci_commit.status) if ci_commit

= cache(cache_key) do
  %li.commit.js-toggle-container
    .commit-row-title
      %strong.str-truncated
        = link_to_gfm commit.title, namespace_project_commit_path(project.namespace, project, commit.id), class: "commit-row-message"
        - if commit.description?
          %a.text-expander.js-toggle-button ...

      .pull-right
        - if ci_commit
          = link_to ci_status_path(ci_commit), class: "c#{ci_status_color(ci_commit)}" do
            = ci_status_icon(ci_commit)
          &nbsp;
        = link_to commit.short_id, namespace_project_commit_path(project.namespace, project, commit), class: "commit_short_id"

      .notes_count
        - if note_count > 0
          %span.light
            %i.fa.fa-comments
            = note_count

    - if commit.description?
      .commit-row-description.js-toggle-content
        %pre
          = preserve(gfm(escape_once(commit.description)))

    .commit-row-info
      = commit_author_link(commit, avatar: true, size: 24)
      authored
      .committed_ago
        #{time_ago_with_tooltip(commit.committed_date, skip_js: true)} &nbsp;
      = link_to_browse_code(project, commit)
